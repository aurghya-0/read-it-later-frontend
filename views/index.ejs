<%- include('partials/header') %>
  <!-- Table Container -->
  <div class="container py-4">
    <div class="container">
      <script src="/socket.io/socket.io.js"></script>
      <div class="alert alert-primary" role="alert" id="status" style="visibility: hidden"></div>

      <div class="row">
        <% articles.forEach(article => { %>
              <div class="col-md-4 mb-4">
                <div class="card shadow-sm article-card">
                  <div class="card-body">
                    <h5 class="card-title">
                      <a href="/article/<%= article.id %>" class="text-primary text-decoration-none"><%= article.title %></a>
                    </h5>
                    <h6 class="card-subtitle mb-2 text-muted"><%= article.classification %></h6>
                    <p class="card-text"><%= article.article_summary %></p>
                    <p class="card-text"><small class="text-info">By <%= article.author %></small></p>
                  </div>
                </div>
              </div>
            <% }) %>
      </div>
    </div>
    <br/>
    <div class="d-flex justify-content-center py-3">
      <nav aria-label="Pagination">
        <ul class="pagination">
          <% if (parseInt(currentPage) > 1) { %>
            <li class="page-item">
              <a href="?page=<%= parseInt(currentPage) - 1 %>&limit=9" class="page-link" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
              </a>
            </li>
          <% } %>

          <%
          // Set the range of pages to display
          let maxPageLinks = 3; // Number of page links to show before and after the current page
          let startPage = Math.max(1, parseInt(currentPage) - maxPageLinks);
          let endPage = Math.min(parseInt(totalPages), parseInt(currentPage) + maxPageLinks);

          // Adjust start and end if there are not enough pages before or after the current page
          // If currentPage is near the start
          // if (parseInt(currentPage) <= maxPageLinks) {
          //   endPage = Math.min(parseInt(totalPages), maxPageLinks); // Show pages 1 to 6 if available
          // }
          // If currentPage is near the end
          // if (parseInt(currentPage) >= parseInt(totalPages) - maxPageLinks) {
          //   startPage = Math.max(1, parseInt(totalPages) - (maxPageLinks)); // Show last pages
          // }

          // Render the page numbers
          for (let i = startPage; i <= endPage; i++) { %>
            <li class="page-item <%= parseInt(currentPage) === i ? 'active' : '' %>">
              <a href="?page=<%= i %>&limit=9" class="page-link">
                <%= i %>
              </a>
            </li>
          <% } %>

          <% if (parseInt(currentPage) < parseInt(totalPages)) { %>
            <li class="page-item">
              <a href="?page=<%= parseInt(currentPage) + 1 %>&limit=9" class="page-link" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
              </a>
            </li>
          <% } %>
        </ul>
      </nav>
    </div>
  </div>
    <script>
      const socket = io();
      socket.on('articleProcessing', (data) => {
          const statusDiv = document.getElementById('status');
          if (data.status === 'started') {
              statusDiv.style.visibility = 'visible';
              statusDiv.innerHTML = `<p >Started processing article: ${data.articleLink}</p>`;
          } else if (data.status === 'completed') {
            statusDiv.style.visibility = 'visible';
            statusDiv.innerHTML = `<p>Completed processing article: ${data.articleLink}</p>`;
            location.reload();
          }else if (data.status === 'database') {
            statusDiv.style.visibility = 'visible';
            statusDiv.innerHTML = `<p>Adding to database: ${data.articleLink}</p>`;
          }else if (data.status === 'processing') {
            statusDiv.style.visibility = 'visible';
            statusDiv.innerHTML = `<p>Processing article: ${data.articleLink}</p>`;
          } else if (data.status === 'error') {
            statusDiv.style.visibility = 'visible';
            statusDiv.innerHTML = `<p>Error processing article: ${data.articleLink}. Error: ${data.error}</p>`;
          }
      });
  </script>
  </div>

<%- include('partials/footer') %>
